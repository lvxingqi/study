version01
    只是简单的子类继承抽象类，子类实现重写父类方法，如果都是动物的话，看上去很正常
version02
    但是鸭子还有非真实动物鸭子，比如橡皮鸭，模型呀，玩具鸭，这些鸭子不会飞，将飞的行为绑死在了鸭子超类中,
    叫声不一样还可以重写方法，但每个鸭子都会飞了，很荒谬，可以重写什么都不做，但是当鸭子种类特别多的时候，
    会出现许多冗余代码
version03
    将飞的行为和叫的行为抽象成接口，这样需要飞的鸭子和需要叫的鸭子只要实现这些接口就可以了，怎么飞怎么叫
    让鸭子自己去实现，但是实现类还是鸭子类，
version04
    将鸭子飞的行为和叫的行为抽象成接口，不再让鸭子类自己去实现，而是让具体飞的行为和叫的行为类去实现要怎么飞
    和怎么叫，在鸭子超类中持有接口引用，声明两个方法，performFly和performQuack,使用引用去调用具体飞行类
    里面的飞行方法和叫的方法，这样鸭子不再关心怎么飞，怎么叫了，每个鸭子实现类里面直接实例化自己需要的飞行类
    和叫的类对象，主类直接使用声明鸭子超类创建具体鸭子类，鸭子类直接调用performFly和performQuack，具体的
    行为已经由实际的飞行类和叫的类自己实现了。直接解耦合
version05
    超类里面设置set方法，在调用时决定怎么飞，怎么叫，比如坐火箭飞的模型鸭，模型鸭原本不会飞也不会叫，现在
    通过set方法给他加上火箭动力让它飞，这样使得改变更加灵活
