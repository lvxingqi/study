version01
    原始的应用版本，命令发送者和命令执行者紧耦合，命令发出者直接创建命令执行者，
    通过命令执行者对象调用具体的方法，如打开电灯和车库门等；
version02
    将命令抽象出来成为一个接口，此接口持有一个execute()方法，命令只需要执行，
    具体的命令实现类持有命令执行者引用，在execute方法里面调用命令执行者的方法。
    控制器现在是命令发出者，命令发出者持有命令的接口引用，通过setCommand方法传入
    具体的命令，命令发出者不再关心命令具体怎么执行了，通过buttonWasPressed方法
    调用命令引用的execute方法，
    实现命令发出者和命令执行者之间的解耦合。

    命令抽象出来成为接口，命令只需要执行，所以有一个execute方法，具体命令需要传入
    对应实体（接收者）的引用，在execute方法里面，根据具体命令决定调用接收者的哪个
    方法，命令发出者需要创建接收者，将接收者创建出来并传递给命令，通过命令调用接收者
    的方法，而不是直接调用接收者，命令发出者不再关心命令接收者如何执行命令，只知道
    调用命令就可以完成某件事。

    将请求封装成对象

    可以将一组请求封装成一个命令数组，创建一个宏命令类实现命令类，在这个类的execute
    方法里面，调用这一组命令。

